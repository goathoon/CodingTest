Number Of Islands
-- DFS/BFS
'1'로 연결된 노드들을 방문한다. 최단거리는 BFS로 하는게 좋지만,
이문제는 최단거리 이기 보다는, 섬들이 연결되어있는지, 연결이 종료되어있는지를 살펴보고
섬의 개수를 출력해야함에서, 가장 먼저 스택을 이용한 DFS의 방식이 떠올랐다.
많아봤자 300 *300 * 4가 계산 횟수,  스택이용하면 O(n)이므로 시간복잡도도 그리 심하지 않아 보임.

각 노드를 방문하면서 스택에 넣고, 주위에 1인곳이 있는지 찾고, 있으면, 그 노드를 방문하고 스택에 넣는다.
그리고 방문했는지 여부를 체크하는 grid도 따로 만들어 visited의 유무를 확인.

--coin Change
dfs 로 시작했다가 너무 복잡한 구현임을 알고, 그리고 보이지도 않았다.
그리고, '최소의 개수'라는 것을 생각해보면 최단거리, 최소시간 등등의 문제는 통상 bfs로 풀 수 있었기에, bfs로 푼다.
bfs 로 무엇을 정렬할 것인가?
큰 코인의 가격부터 넣어서 bfs를 돌리는건 편향되어있기 때문에 안될거 같고, 결국 amount를 기준으로 node를 탐색하는게 맞겠다.
그리고 amount 가 0이 되는 곳의 노드의 height 가 결국 개수가 될것이다.

그리고 굳이 visited는 필요하지 않다. 결국 개수는 계속해서 증가하기 때문.